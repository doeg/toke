{"version":3,"sources":["../../src/tokenize.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;yBAES,aAAa;;;;qBACjB,SAAS;;;;AAE3B,IAAM,EAAE,GAAG;AACT,OAAK,EAAE,WAAW;CACnB,CAAC;;qBAEa,UAAS,QAAQ,EAAE,IAAI,EAAE;;AAEtC,MAAI,MAAM,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;;AAE1C,SAAO,MAAM,CAAC,GAAG,CAAC,UAAA,KAAK,EAAI;;;AAGzB,QAAI,GAAG,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC/B,QAAI,IAAI,CAAC;AACT,QAAI,KAAK,CAAC;;AAEV,QAAI,GAAG,IAAI,GAAG,CAAC,MAAM,IAAI,CAAC,EAAE;AAC1B,UAAI,GAAG,uBAAU,KAAK,CAAC,GAAG,CAAC;AAC3B,WAAK,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;KAChB,MAEI;AACH,UAAI,GAAG,uBAAU,KAAK,CAAC,IAAI,CAAC;AAC5B,WAAK,GAAG,KAAK,CAAC;KACf;;AAED,WAAO,uBAAU,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;GAChD,CAAC,CAAC;CACJ","file":"tokenize.js","sourcesContent":["\"use strict\";\n\nimport Constants from \"./constants\";\nimport Token from \"./token\";\n\nconst RE = {\n  token: /\\{(\\w+)\\}/,\n};\n\nexport default function(template, opts) {\n\n  var tokens = template.trim().split(/\\s+/);\n\n  return tokens.map(token => {\n\n    // Check if the token is a POS\n    var pos = RE.token.exec(token);\n    var type;\n    var token;\n\n    if (pos && pos.length >= 2) {\n      type = Constants.TYPES.POS;\n      token = pos[1];\n    }\n\n    else {\n      type = Constants.TYPES.TEXT;\n      token = token;\n    }\n\n    return new Token({ token: token, type: type });\n  });\n}\n"]}